name: PreRelease Sanity Check

permissions:
  actions: write
  contents: write
  
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  trigger-golang-ci-test:
    # Only run when PR is from dev branch to main
    if: github.head_ref == 'dev'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Trigger and wait for Golang CI Test
      run: |
        echo "Triggering Golang CI workflow..."
        gh workflow run test-golang-ci.yaml -f branch=dev
        
        echo "Waiting for workflow to start..."
        sleep 15
        
        echo "Getting latest run ID..."
        run_id=$(gh run list --workflow=test-golang-ci.yaml --limit 1 --json databaseId --jq '.[0].databaseId')
        
        echo "Waiting for run $run_id to complete..."
        gh run watch $run_id --exit-status
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  trigger-docker-buildx-ci-test:
    # Only run when PR is from dev branch to main
    if: github.head_ref == 'dev'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Trigger and wait for Docker Buildx CI Test
      run: |
        echo "Triggering Docker Buildx CI workflow..."
        gh workflow run test-docker-buildx-ci.yaml -f branch=dev
        
        echo "Waiting for workflow to start..."
        sleep 15
        
        echo "Getting latest run ID..."
        run_id=$(gh run list --workflow=test-docker-buildx-ci.yaml --limit 1 --json databaseId --jq '.[0].databaseId')
        
        echo "Waiting for run $run_id to complete..."
        gh run watch $run_id --exit-status
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  