name: CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-fastci-action-in-container:
    runs-on: ubuntu-latest
   
    container:
      image: ubuntu:22.04
      options: --privileged --cap-add=SYS_RESOURCE --cap-add=SYS_ADMIN --mount type=bind,source=/proc,target=/proc
    
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run FastCI Action
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        fastci_otel_token: ${{ secrets.FASTCI_OTEL_TOKEN }}
    - name: Simulate files marked for upload
      run: |
        mkdir -p /tmp/fastci/cache/upload
        mkdir -p /tmp/test
        echo "hello" > /tmp/test/hello.txt
        ln -s /tmp/test /tmp/fastci/cache/upload/t1

  check-tmp-test-exists:
    needs: test-fastci-action-in-container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for tar and zip
        run: |
          tar --version
          zip --version
      - name: Run FastCI Action
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fastci_otel_token: ${{ secrets.FASTCI_OTEL_TOKEN }}

      - name: Check if /tmp/test exists
        run: |
          
          if [ -d /tmp/test ]; then
            echo "/tmp/test exists."
          else
            echo "/tmp/test does NOT exist!" && exit 1
          fi

  test-fastci-action:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [amd, arm]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Run FastCI Action
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        fastci_otel_token: ${{ secrets.FASTCI_OTEL_TOKEN }}
    - name: Check tracer process
      if: matrix.os == 'ubuntu-latest'
      run: |
        if pgrep -f tracer; then
          echo "Tracer process found."
        else
          echo "Tracer process NOT found!" && exit 1
        fi
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    - name: Run test
      run: echo "test"

  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test

    - name: Build
      run: npm run build

    - name: Package
      run: npm run package
      
  