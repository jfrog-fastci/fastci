name: CI/CD Workflow

on:
  workflow_dispatch:
  push:
    branches: [ main, dev, beta ]
  pull_request:
    branches: [dev, beta, main ]

jobs:
  test-fastci-action-in-container:
    runs-on: ubuntu-latest
    container:
      image: golang:1.24.0
      options: >-
        --privileged
        --cap-add=SYS_RESOURCE
        --cap-add=SYS_ADMIN
        --mount type=bind,source=/sys/kernel/debug,target=/sys/kernel/debug
        --mount type=bind,source=/sys/kernel/tracing,target=/sys/kernel/tracing
        --mount type=bind,source=/proc,target=/proc
    steps:
    - name: Print env
      run: env

    - name: Mount debugfs and tracefs
      run: |
        mountpoint -q /sys/kernel/debug || mount -t debugfs none /sys/kernel/debug
        mountpoint -q /sys/kernel/tracing || mount -t tracefs none /sys/kernel/tracing
      shell: bash
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Run FastCI Action
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        fastci_otel_token: ${{ secrets.FASTCI_OTEL_TOKEN }}
      env:
        GITHUB_REPOSITORY: jfrog-fastci/fastci
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
   
    - name: Run test
      run: echo "test"

  test-fastci-action:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd, arm]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Run FastCI Action
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        fastci_otel_token: ${{ secrets.FASTCI_OTEL_TOKEN }}
    - name: Check agent process
      if: matrix.os == 'ubuntu-latest'
      run: |
        if pgrep -f agent; then
          echo "agent process found."
        else
          echo "agent process NOT found!" && exit 1
        fi
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    - name: Run test
      run: echo "test"
      
  
