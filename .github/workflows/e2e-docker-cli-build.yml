name: E2E - docker/cli build.yml

# Default to 'contents: read', which grants actions to read commits.
#
# If any permission is set, any permission not included in the list is
# implicitly set to "none".
#
# see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions


permissions:
  contents: read
on:
  pull_request:
    branches: [dev, beta, main ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERSION: ${{ github.ref }}


jobs:
  build:
    runs-on: ubuntu-24.04
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target:
          - binary
          - dynbinary
        platform: ${{ fromJson(needs.prepare.outputs.matrix) }}
        use_glibc:
          - ""
          - glibc
    steps:
      - uses: actions/checkout@v4
        with:
          path: ./
     
      - name: Run FastCI Action
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fastci_otel_token: ${{ secrets.FASTCI_OTEL_TOKEN }}
      - name: clean fastci code
        run: |
          rm -rf ./fastci
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          repository: docker/cli
          path: ./cli
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: dockereng/cli-bin
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr
      -
        name: Build and push image
        uses: docker/bake-action@v6
        with:
          source: ./cli
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: bin-image-cross
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.cache-from=type=gha,scope=bin-image
            *.cache-to=type=gha,scope=bin-image,mode=max